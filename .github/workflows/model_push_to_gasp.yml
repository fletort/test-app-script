name: AppScript online gasp ide push and Test Reusable Workflow
on:
  workflow_call:
    inputs:
      launch_test:
        type: boolean
        default: false

    secrets:
      GASP_CLIENT_ID:
        required: true
        description: oauth2ClientSettings.clientId from global .clasprc.json file (located in your home directory)
      GASP_CLIENT_SECRET:
        required: true
        description: oauth2ClientSettings.clientSecret from global .clasprc.json file (located in your home directory)
      GASP_REFRESH_TOKEN:
        required: true
        description: token.refresh_token from global .clasprc.json file (located in your home directory)
      GCP_GASP_CLIENT_ID:
        required: false
        description: oauth2ClientSettings.clientId from local .clasprc.json file (located in your project directory)
      GCP_GASP_CLIENT_SECRET:
        required: false
        description: oauth2ClientSettings.clientSecret from local .clasprc.json file (located in your project directory)
      GCP_GASP_REFRESH_TOKEN:
        required: false
        description: token.refresh_token from local .clasprc.json file (located in your project directory)
      CLASPRC_JSON:
        required: false
jobs:
  push_to_gasp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: fletort/clasp-tokens-action@v1.0.0-alpha
      with:
        client-id: ${{ secrets.GASP_CLIENT_ID }}
        client-secret: ${{ secrets.GASP_CLIENT_SECRET }}
        refresh-token: ${{ secrets.GASP_REFRESH_TOKEN }}
    - name: Install clasp
      id: install-clasp
      run: sudo npm install @google/clasp -g
    - name: Download dependencies with npm ci  # For the myclasp script dependencies, TODO release it in npm
      run: npm ci
    - name: Push script to scripts.google.com
      id: clasp-push
      run: npm run clasp_push
    # - name: Write CLASPRC_JSON secret to .clasprc.json file
    #   if: ${{ inputs.launch_test }}
    #   id: write-clasprc
    #   run: echo "$CLASPRC_JSON_SECRET" >> .clasprc.json
    #   env:
    #     CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}
    # - name: Run Test on GASP
    #   if: ${{ inputs.launch_test }}
    #   id: clasp-run
    #   run: clasp run runTestSuite
  test_on_gasp:
    if: ${{ inputs.launch_test }}
    needs: [push_to_gasp]
    runs-on: ubuntu-latest
    steps:
      - uses: fletort/clasp-tokens-action@v1.0.0-alpha
        with:
          client-id: ${{ secrets.GASP_CLIENT_ID }}
          client-secret: ${{ secrets.GASP_CLIENT_SECRET }}
          refresh-token: ${{ secrets.GASP_REFRESH_TOKEN }}
          gcp-client-id: ${{ secrets.GCP_GASP_CLIENT_ID }}
          gcp-client-secret: ${{ secrets.GCP_GASP_CLIENT_SECRET }}
          gcp-refresh-token: ${{ secrets.GCP_GASP_REFRESH_TOKEN }}
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp -g
      - uses: actions/checkout@v3 # only for .clasp.json file !
      # - name: Download dependencies with npm ci  # For the myclasp script dependencies, TODO release it in npm
      #   run: npm ci
      # - name: Push script to scripts.google.com
      #   id: clasp-push
      #   run: npm run clasp_push
      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> .clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}  
      - name: Run Test on GASP environement
        if: ${{ inputs.launch_test }}
        id: clasp-run
        run: clasp run runTestSuite