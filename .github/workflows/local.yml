name: Local CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write


jobs:
  test_local:
    uses: fletort/test-app-script/.github/workflows/test_local.yml@develop
  # doc job
  generate_doc:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      - name: Download dependencies
        run: npm ci
      - name: Build JsDoc
        run: npm run doc
      - name: Keep Generated Doc
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: './docs'
          retention-days: 1

  # Deployment doc & testresult
  deploy_doc:
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    runs-on: ubuntu-latest
    needs: [test_local, generate_doc]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Get Docs content
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: './'
      - name: Get Test Coverage Report content
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: './coverage'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  